// Genpilot MCP Architecture
digraph {
	User [label="用户"]
	TravellerAgent [label="Traveller Agent
主协调者"]
	WeatherAgent [label="Weather Observer
天气观察者"]
	AdvisorAgent [label="Local Advisor
时尚顾问"]
	GetWeather [label="get_weather工具"]
	GetFashion [label="get_fashion_advice工具"]
	FinalAnswer [label="final_answer工具"]
	LiteLLMLayer [label="LiteLLM适配层"]
	Bedrock [label="AWS Bedrock"]
	ErrorHandling [label="错误处理"]
	Retry [label="重试机制"]
	Cache [label="缓存"]
	Logging [label="日志"]
	ToolRegistry [label="工具注册表"]
	ToolValidator [label="工具验证器"]
	ToolExecutor [label="工具执行器"]
	Memory [label="记忆管理"]
	MessageHistory [label="消息历史"]
	ContextRetrieval [label="上下文检索"]
	Protocol [label="MCP协议"]
	User -> TravellerAgent [label="问询"]
	TravellerAgent -> WeatherAgent [label="天气查询"]
	TravellerAgent -> AdvisorAgent [label="时尚建议"]
	WeatherAgent -> GetWeather [label="使用"]
	AdvisorAgent -> GetFashion [label="使用"]
	TravellerAgent -> FinalAnswer [label="最终答案"]
	TravellerAgent -> LiteLLMLayer [label="模型调用"]
	WeatherAgent -> LiteLLMLayer [label="模型调用"]
	AdvisorAgent -> LiteLLMLayer [label="模型调用"]
	LiteLLMLayer -> Bedrock [label="统一接口"]
	LiteLLMLayer -> ErrorHandling [label=""]
	LiteLLMLayer -> Retry [label=""]
	LiteLLMLayer -> Cache [label=""]
	LiteLLMLayer -> Logging [label=""]
	GetWeather -> ToolRegistry [label="注册"]
	GetFashion -> ToolRegistry [label="注册"]
	FinalAnswer -> ToolRegistry [label="注册"]
	ToolRegistry -> ToolValidator [label="验证"]
	ToolValidator -> ToolExecutor [label="执行"]
	TravellerAgent -> Memory [label="状态维护"]
	WeatherAgent -> Memory [label="状态维护"]
	AdvisorAgent -> Memory [label="状态维护"]
	Memory -> MessageHistory [label="存储"]
	Memory -> ContextRetrieval [label="检索"]
	ToolRegistry -> Protocol [label="标准化"]
	Memory -> Protocol [label="格式化"]
	LiteLLMLayer -> Protocol [label="适配"]
}
